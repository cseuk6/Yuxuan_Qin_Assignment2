/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 05 15:53:12 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ToolBox_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) "\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'e';
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "comp5111.assignment.cut.ToolBox$LocaleTools", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "comp5111.assignment.cut.ToolBox$LocaleTools", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1106);
      charBuffer0.put('F');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1106, 1106);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.contains(charBuffer0, 59);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isEmpty("d/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("", 707, 707);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("^:D1+t;'M7|!`h5M");
      String[] stringArray0 = pattern0.split((CharSequence) "^:D1+t;'M7|!`h5M", 3472);
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((Object[]) stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      char[] charArray0 = new char[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = ToolBox.ArrayTools.getLength((Object) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", "", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("#E$[/SWj");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("r4`O@V0?S!xy'p");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("?$b<g_UT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("*F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("&*N;{]_S");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("@)u6^v=dC");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("^:D1+t;'M7|!`h5M");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("\r");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("W");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("^:D1+t;'M7|");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("ni");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isNumeric("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[4];
      charSequenceArray0[0] = (CharSequence) "6~Rjf]z;q";
      charSequenceArray0[1] = (CharSequence) "6~Rjf]z;q";
      charSequenceArray0[2] = (CharSequence) "^3m";
      charSequenceArray0[3] = (CharSequence) "6~Rjf]z;q";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[1] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "Tp", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      char[] charArray0 = new char[2];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) ":4Z|=", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("R|3lp3C~");
      String[] stringArray0 = new String[5];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) stringArray0[0], charArray0);
      assertEquals(8, charArray0.length);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[2] = 'C';
      int int0 = ToolBox.StringTools.indexOfAny("@)u6^v=dC", charArray0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      char[] charArray0 = new char[2];
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[3];
      int int0 = ToolBox.StringTools.indexOfAny("?$b<g_UT", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny("\r", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      char[] charArray0 = new char[3];
      int int0 = ToolBox.StringTools.indexOfAny((CharSequence) null, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) "", (Supplier<CharSequence>) null);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) null, supplier0);
      //  // Unstable assertion: assertEquals("\r", charSequence0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) "i*BR}n_n01`L/m{(", supplier0);
      assertEquals("i*BR}n_n01`L/m{(", charSequence0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "L,oIp";
      stringArray0[1] = "LFi%<;IIw;2";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("L,oIp", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "R|3lp3C~";
      stringArray0[1] = "R|3lp3C~";
      stringArray0[2] = "R|3lp3C~";
      stringArray0[3] = "R|3lp3C~";
      stringArray0[4] = "R|3lp3C~";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("R|3lp3C~", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "&Z>\"z");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "&Z>\"z", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\r", (CharSequence) "\r");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "KfJz3jj1l(tSnD4", (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      CharBuffer charBuffer1 = CharBuffer.allocate(16);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "]C0Q,&4[@Y~7.^^_H");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 's';
      boolean boolean0 = ToolBox.StringTools.containsNone("Ss8{o{%^MS7E", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[8];
      boolean boolean0 = ToolBox.StringTools.containsNone("YTZ|+j}~", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone("", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "x}mBA#K.", (CharSequence) "\r");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "?$b<g_UT", toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains("", (-1646));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("%", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("1ubfk$5ca", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("comp5111.assignment.cut.ToolBox$CharSequenceTools", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "comp5111.assignment.cut.ToolBox$CharTools", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("comp5111.assignment.cut.ToolBox$RegExTools", "", true);
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("comp5111.assignment.cut.ToolBox$LocaleTools", "comp5111.assignment.cut.ToolBox$LocaleTools", true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = ToolBox.StringTools.length((CharSequence) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", "", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = ToolBox.RegExTools.replacePattern("", stringArray0[0], "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("R|3lp3C~", "R|3lp3C~", "");
      assertEquals("|", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, "", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("comp5111.assignment.cut.ToolBox$ArrayTools", "3,x?y'Edb.77,&Pl", (String) null);
      assertEquals("comp5111.assignment.cut.ToolBox$ArrayTools", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("=", (String) null, "");
      assertEquals("=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", ":4Z|=", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("i*BR}n_n01`L/m{(", 29);
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("x}mBA#K.", (Pattern) null, "?$b<g_UT");
      assertEquals("x}mBA#K.", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 1);
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 180);
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, pattern0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = ToolBox.RegExTools.replaceAll("R|3lp3C~", "R|3lp3C~", stringArray0[0]);
      assertEquals("R|3lp3C~", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", (String) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("R|3lp3C~", "R|3lp3C~", "R|3lp3C~");
      assertEquals("R|3lp3C~|R|3lp3C~", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = ToolBox.RegExTools.replaceAll(stringArray0[3], stringArray0[3], stringArray0[0]);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("_");
      String string0 = ToolBox.RegExTools.replaceAll("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("|[II8V+", (Pattern) null, "comp5111.assignment.cut.ToolBox$StringTools");
      assertEquals("|[II8V+", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("k_Tg..Dcv", 2714);
      String string0 = ToolBox.RegExTools.replaceAll("k_Tg..Dcv", pattern0, "*L4h");
      assertEquals("*L4h", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("^:D1+t;'M7|!`h5M");
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, "^:D1+t;'M7|");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[7];
      charSequenceArray0[0] = (CharSequence) " ";
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charSequenceArray0[0], charBuffer0, 2571);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "", 0, 0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "", 65);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, (-603));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(46);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "*L4h", 612);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1106);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "*L4h", 612);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("|", "R|3lp3C~", 2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, "\n", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(52);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 52);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, 3355);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, (-1648), (-2734));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("", 2012, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1106);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1106, 1106);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(52);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("", true, (-1142), charBuffer0, 5336, 21);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("R|3lp3C~", true, 1476, "R|3lp3C~|R|3lp3C~", 1476, 1259);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.CharSequenceTools.regionMatches((CharSequence) null, true, 1476, (CharSequence) null, 1476, 1259);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("comp5111.assignment.cut.ToolBox$CharSequenceTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray(charBuffer0);
      assertEquals(96, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("");
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("Tp", "Tp", 56);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "E+lv8vfZ4%()oq", (CharSequence) charBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "comp5111.assignment.cut.ToolBox$RegExTools", (CharSequence) "comp5111.assignment.cut.ToolBox$RegExTools");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((short[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      short[] shortArray0 = new short[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = ToolBox.StringTools.getCommonPrefix((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((long[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      long[] longArray0 = new long[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int[] intArray0 = new int[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int[] intArray0 = new int[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((float[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      float[] floatArray0 = new float[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "&*N;{]_S", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("R|3lp3C~");
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "R|3lp3C~", charArray0);
      assertEquals((-1), int0);
      assertEquals(8, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: g
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("Vy6EBDHNCm0m#\"pn\"t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: Vy6EBDHNCm0m#\"pn\"t
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("`S _Dlu5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: `S _Dlu5
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("Tp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: Tp
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "", toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\u0000', ToolBox.CharTools.NUL);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
