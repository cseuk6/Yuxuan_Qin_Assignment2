/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 05 16:32:56 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ToolBox_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = 'm';
      ToolBox.StringTools.indexOfAny("<5Lr[", charArray0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ToolBox.StringTools.equals((CharSequence) "\r", (CharSequence) "");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '?';
      ToolBox.StringTools.containsAny((CharSequence) "]j<'OF5]-pOQ", charArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "*MIWV2&0~**^>voC");
      ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'h';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1, 0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, charBuffer0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ToolBox.CharSequenceTools.indexOf(charBuffer0, 0, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114096);
      // Undeclared exception!
      ToolBox.CharSequenceTools.indexOf(charBuffer0, 65536, 0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("R$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: R$
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ToolBox.ArrayTools.getLength((Object) null);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ToolBox.StringTools.length("\r");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ToolBox.StringTools.isNumeric(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ToolBox.StringTools.isEmpty((CharSequence) null);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[9];
      ToolBox.ArrayTools.isEmpty((Object[]) stringArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      char[] charArray0 = new char[2];
      ToolBox.ArrayTools.isEmpty(charArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ToolBox.StringTools.equals((CharSequence) "\n", (CharSequence) "\n");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ToolBox.StringTools.isCreatable("R.");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ToolBox.StringTools.isCreatable("H+4)1(2:C$yf");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ToolBox.StringTools.isCreatable("VE[mI~x:I@%13ih");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ToolBox.StringTools.isCreatable("Z\"iz3U");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ToolBox.StringTools.isCreatable("\r");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ToolBox.StringTools.isCreatable("!C");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ToolBox.StringTools.isCreatable("+?1Q");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ToolBox.StringTools.isCreatable("");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ToolBox.StringTools.isCreatable("D0Rl~,");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ToolBox.StringTools.isMixedCase("?9hX");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ToolBox.StringTools.isMixedCase("@_L3");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ToolBox.StringTools.isMixedCase("*HMd7Pg6KP\";$");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ToolBox.StringTools.isMixedCase(".on+");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ToolBox.StringTools.isMixedCase("%");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ToolBox.StringTools.isMixedCase("");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ToolBox.StringTools.isAllUpperCase("G=v");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ToolBox.StringTools.isAllUpperCase("");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ToolBox.StringTools.isAllLowerCase((CharSequence) null);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("VO`Ox{E_3x");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: VO`Ox{E_3x
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[2];
      charSequenceArray0[0] = (CharSequence) "]j<'OF5]-pOQ";
      charSequenceArray0[1] = (CharSequence) "]j<'OF5]-pOQ";
      ToolBox.StringTools.indexOfDifference(charSequenceArray0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[7];
      charSequenceArray0[0] = (CharSequence) ":U5F1tWhu+zP(3u";
      charSequenceArray0[1] = (CharSequence) ":U5F1tWhu+zP(3u";
      charSequenceArray0[2] = (CharSequence) "uATYm%J'Kha./";
      charSequenceArray0[3] = (CharSequence) ":U5F1tWhu+zP(3u";
      charSequenceArray0[4] = (CharSequence) "uATYm%J'Kha./";
      charSequenceArray0[5] = (CharSequence) ":U5F1tWhu+zP(3u";
      charSequenceArray0[6] = (CharSequence) "uATYm%J'Kha./";
      ToolBox.StringTools.indexOfDifference(charSequenceArray0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      ToolBox.StringTools.getCommonPrefix(stringArray0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "";
      ToolBox.StringTools.getCommonPrefix(stringArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[2];
      ToolBox.StringTools.indexOfDifference(charSequenceArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ToolBox.StringTools.indexOfAnyBut((CharSequence) ",o[kFWM", (CharSequence) ",V*LIl");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ToolBox.StringTools.indexOfAnyBut((CharSequence) "S0|b\"m|6&", (CharSequence) "");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ToolBox.StringTools.indexOfAnyBut((CharSequence) "", (CharSequence) "G=v");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'y';
      ToolBox.StringTools.indexOfAnyBut((CharSequence) "y(T%JU20", charArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray(",V*LIl");
      ToolBox.StringTools.indexOfAnyBut((CharSequence) ",V*LIl", charArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      ToolBox.StringTools.indexOfAnyBut((CharSequence) "*L1dUR!;k}&/fTRw@_", toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharSequence[] charSequenceArray0 = new CharSequence[2];
      ToolBox.StringTools.indexOfAnyBut(charSequenceArray0[1], charArray0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'b';
      ToolBox.StringTools.indexOfAny("1S1HHi-U.b`<XgR}G3", charArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[4] = 'b';
      ToolBox.StringTools.indexOfAny("1S1HHi-U.b`<XgR}G3", charArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("\r");
      ToolBox.StringTools.indexOfAny("\r", charArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray(",V*LIl");
      ToolBox.StringTools.indexOfAny(",V*LIl", charArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[2];
      ToolBox.StringTools.indexOfAny((CharSequence) null, charArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ToolBox.StringTools.getIfEmpty((CharSequence) "", (Supplier<CharSequence>) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((CharSequence) null).when(supplier0).get();
      ToolBox.StringTools.getIfEmpty((CharSequence) null, supplier0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ToolBox.StringTools.getIfEmpty("%", (Supplier<String>) null);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      stringArray0[2] = "NW.u\"";
      ToolBox.StringTools.getCommonPrefix(stringArray0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]j<'OF5]-pOQ";
      ToolBox.StringTools.getCommonPrefix(stringArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ToolBox.StringTools.equals((CharSequence) "", (CharSequence) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "yGs{");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]j<'OF5]-pOQ";
      ToolBox.StringTools.equals((CharSequence) stringArray0[0], (CharSequence) "]j<'OF5]-pOQ");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ToolBox.StringTools.equals((CharSequence) "", (CharSequence) "w<y4ek(-k");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      ToolBox.StringTools.containsNone("comp5111.assignment.cut.ToolBox$ArrayTools", charArray0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ToolBox.StringTools.containsNone("?M}6s]zfZ1~n", (char[]) null);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]j<'OF5]-pOQ";
      char[] charArray0 = new char[5];
      ToolBox.StringTools.containsNone(stringArray0[0], charArray0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharSequence[] charSequenceArray0 = new CharSequence[2];
      ToolBox.StringTools.containsNone(charSequenceArray0[0], charArray0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ToolBox.StringTools.containsAny((CharSequence) "\r", (CharSequence) null);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) "");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ToolBox.StringTools.contains((CharSequence) null, 23);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ToolBox.StringTools.compareIgnoreCase("@g?\"", (String) null, true);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ToolBox.StringTools.compareIgnoreCase("n\"xRu", (String) null, false);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ToolBox.StringTools.compareIgnoreCase((String) null, "=}7 Et)", false);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ToolBox.StringTools.compareIgnoreCase((String) null, "%uKKyIU#@`ge#", true);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ToolBox.StringTools.compareIgnoreCase(" ", " ", true);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ToolBox.StringTools.compareIgnoreCase("dU]JVGU%TJP6>;#h", "", true);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ToolBox.StringTools.compare("34NDjSwa;E:", (String) null, true);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ToolBox.StringTools.compare("9O(Z}63-UPUbL", (String) null, false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ToolBox.StringTools.compare((String) null, "Fg?HUP@?vTp", true);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ToolBox.StringTools.compare((String) null, "", false);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ToolBox.StringTools.compare("", "", true);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ToolBox.StringTools.compare("mC5c:P", "Gx[4W.S=a", true);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ToolBox.RegExTools.replacePattern(" ", "Invalid locale format: ", (String) null);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ToolBox.RegExTools.replacePattern("*HMd7Pg6KP\";$", (String) null, "Wmqf00^O");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ToolBox.RegExTools.replacePattern("", "G=v", "");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ToolBox.RegExTools.replacePattern((String) null, (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ToolBox.RegExTools.replaceFirst(" ", "", (String) null);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ToolBox.RegExTools.replaceFirst("Invalid locale format: ", (String) null, "M&kL8!M9");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ToolBox.RegExTools.replaceFirst("9&@Jrt9jqV)%9_", "J2XUJ", "9&@Jrt9jqV)%9_");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ToolBox.RegExTools.replaceFirst((String) null, "yGs{", (String) null);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("=Jd\"4");
      ToolBox.RegExTools.replaceFirst("=Jd\"4", pattern0, (String) null);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      ToolBox.RegExTools.replaceFirst("G=v", pattern0, "");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ToolBox.RegExTools.replaceFirst(",o[kFWM", (Pattern) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      ToolBox.RegExTools.replaceFirst((String) null, pattern0, "##S>u5$m(w'Wo#Aj");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ToolBox.RegExTools.replaceAll("w<y4ek(-k", "\n", "VE[mI~x:I@%13ih");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ToolBox.RegExTools.replaceAll("BN:K", (String) null, "m-BoSqTC.Cjy%7V");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ToolBox.RegExTools.replaceAll("h*W*qA ", "", (String) null);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ToolBox.RegExTools.replaceAll((String) null, (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("comp5111.assignment.cut.ToolBox$ArrayTools");
      ToolBox.RegExTools.replaceAll("", pattern0, (String) null);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("m-BoSqTC.Cjy%7V", 1);
      ToolBox.RegExTools.replaceAll("", pattern0, ";5+QsH");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ToolBox.RegExTools.replaceAll(",V*LIl", (Pattern) null, "");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("comp5111.assignment.cut.ToolBox$ArrayTools", 2308);
      ToolBox.RegExTools.replaceAll((String) null, pattern0, "-Js8}LE}$s~uF");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "G=v");
      ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      // Undeclared exception!
      ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 1114111);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) "O");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "G=v");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("G=v", charBuffer0, (byte) (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "G=v");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("G=v", charBuffer0, (byte)26);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, "\n", 23);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(",V*LIl", ",V*LIl", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, 230);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 39, 43);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("%", 1, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, Integer.MAX_VALUE, 1520);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('h');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, charBuffer0, 2, 14);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('h');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, charBuffer0, 'y', 14);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 1, charBuffer0, 18, (byte) (-107));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('h');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, charBuffer0, (-37), 14);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, (-673), charBuffer0, (-673), 7);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.CharSequenceTools.regionMatches("6W3J$R/[]4+*mpYj%", false, 0, (CharSequence) null, 88, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("comp5111.assignment.cut.ToolBox$CharSequenceTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("%", true, (-1), "%", 0, 312);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 0, charBuffer0, 2, 14);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      char[] charArray1 = ToolBox.CharSequenceTools.toCharArray(charBuffer0);
      assertEquals(1, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray((CharSequence) null);
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) " ", (CharSequence) " ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]j<'OF5]-pOQ";
      int int0 = ToolBox.CharSequenceTools.indexOf(stringArray0[0], "]j<'OF5]-pOQ", (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114111, Integer.MAX_VALUE);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114141);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114141, 1114141);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3763);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1718, 1718);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      // Undeclared exception!
      ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114111, (-2147483624));
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      short[] shortArray0 = new short[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      short[] shortArray0 = new short[8];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      long[] longArray0 = new long[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      long[] longArray0 = new long[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int[] intArray0 = new int[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int[] intArray0 = new int[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      float[] floatArray0 = new float[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      float[] floatArray0 = new float[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "a8+=V.h", (char[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[6];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale(" ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format:  
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("t {IK1pK>`v#<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: t {IK1pK>`v#<
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("s_-|]LrPNT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: s_-|]LrPNT
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      int int0 = ToolBox.StringTools.indexOfAny("%-HEt\":&_[~VKI;v&BU", toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\n', ToolBox.CharTools.LF);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
